/**
 * Created by zendynamix on 18-11-2016.
 */

function authenticate(userObject){
console.log("********userObject************")
    console.log(userObject)
    return new Promise(
        function (resolve, reject) {
            try{
                    require('./lib/strategies/tokenbasedauthentication').authenticate(userObject).then((status)=> {
                        resolve(status);
                });

        }
catch(e){
        reject(e.stack)
    }
})
}

function signUp(userDetails){

    return new Promise(

        function (resolve, reject) {
            try{
                require('./lib/signup/signup').addUser(userDetails).then((status)=> {
                    resolve(status);
            });
        }
catch(e){
        reject(e.stack)
    }
})
}


function validateTokenByPublicKey(token){

    return new Promise(
        function (resolve, reject) {
            try{
                require('./lib/strategies/tokenbasedauthentication').validateToken(token).then((status)=> {

                    resolve(status);
            });

        }
catch(e){
        reject(e.stack)
    }
})
}


function updateUser(userDetails){

    return new Promise(

        function (resolve, reject) {
            try{
                require('./lib/signup/signup').UpdateUserDetails(userDetails).then((status)=> {
                    resolve(status);
            });
        }
catch(e){
        reject(e.stack)
    }
})
}
function deleteUser(userName){

    return new Promise(

        function (resolve, reject) {
            try{
                require('./lib/signup/signup').deleteUserDetails(userName).then((status)=> {
                    resolve(status);
            });
        }
catch(e){
        reject(e.stack)
    }
})
}
function findAllUser(){

    return new Promise(

        function (resolve, reject) {
            try{
                require('./lib/signup/signup').findAllUserDetails().then((status)=> {
                    resolve(status);
            });
        }
catch(e){
        reject(e.stack)
    }
})
}

function findUserCount(){
    return new Promise(
        function (resolve, reject) {
            try{
                require('./lib/signup/signup').findUserCountDetails().then((status)=> {
                    console.log("before final")
                    console.log(status)
                    resolve(status);
            });
        }
catch(e){
        reject(e.stack)
    }
})
}


function findUserByRange(start,range){

    return new Promise(

        function (resolve, reject) {
            try{
                require('./lib/signup/signup').findUserDetailsByRange(start,range).then((status)=> {
                    resolve(status);
            });
        }
catch(e){
        reject(e.stack)
    }
})
}

module.exports={
    signUp:signUp,
    authenticate:authenticate,
    validateTokenByPublicKey:validateTokenByPublicKey,
    updateUser:updateUser,
    deleteUser:deleteUser,
    findAllUser:findAllUser,
    findUserCount:findUserCount,
    findUserByRange:findUserByRange
}